import csv
from collections import Counter
import datetime
from datetime import date
import Task04
import os
import re

#News code
class News:
    def __init__(self, new, place, datetime):
        self.new = new
        self.place = place
        self.datetime = datetime
    def print_news(self):
        formatted_date = self.datetime.strftime("%m/%d/%Y")
        formatted_time = self.datetime.strftime("%H.%M")
        content = f"""News -------------------------
{self.new}
{self.place}, {formatted_date} {formatted_time}
------------------------------\n\n"""
        print(content)
        with open("news.txt", "a") as file:
            file.write(content)

#Advertise code
class PrivateAdd:
    def __init__(self, advr, expdate):
        self.advr = advr
        self.expdate = expdate
    def print_adv(self):
        current_day = date.today()
        remaining_days = (self.expdate - current_day).days
        expiration_date_upd = self.expdate.strftime("%d/%m/%Y")
        cont2 = f"""Private Ad ------------------
{self.advr}
Actual until: {expiration_date_upd}, {remaining_days} days left
------------------------------\n\n"""
        print(cont2)
        with open("news.txt", "a") as file:
            file.write(cont2)

#Joking code
class Joke:
    def __init__(self, txt):
        self.txt = txt
    def print_joke(self):
        cont3 = f"""Joke of the day ------------
{self.txt}
------------------------------\n\n"""
        print(cont3)
        with open("news.txt", "a") as file:
            file.write(cont3)

#Brealing news (Task06)
class Breaking_news:
    def __init__(self, file_path):
        self.file_path = file_path
    def print_breaknews(self):
        with open(f"{self.file_path}", "r", encoding="utf-8") as file:
            content = file.read()
            content = Task04.update_text(content)
            cont4 = f"""Breaking news ------------
{content}\n------------------------------\n\n"""
            print(cont4)
            with open("news.txt", "a") as file:
                file.write(cont4)

#Task07
class CsvCollecterCount:
    def __init__(self, filepath):
        self.filepath = filepath

    def count_words(self):
        with open(f"{self.filepath}", "r") as file:
            content = file.read()
            case_lower = content.lower()
            words = re.findall(r'\b\w+\b', case_lower)
            word_counts = {}

            for word in words:
                if word in word_counts:
                    word_counts[word] += 1
                else:
                    word_counts[word] = 1

        if os.path.exists("word_counts.csv"):
            os.remove("word_counts.csv")

        with open("word_counts.csv", "w") as csvfile:
            writer = csv.writer(csvfile)
            for word, count in word_counts.items():
                writer.writerow([word, count])


class CsvLetter:
    def __init__(self, filepath):
        self.filepath = filepath

    def letter_info(self):
        with open(f"{self.filepath}", "r") as file:
            content = file.read()
            letters = []
            for char in content:
                if char.strip():
                    letters.append(char)
        letter_counts = Counter(letters)
        total_letters = sum(letter_counts.values())
        letter_percentages = {
            letter: count / total_letters * 100 for letter, count in letter_counts.items()
        }

        if os.path.exists("letter_count.csv"):
            os.remove("letter_count.csv")

        with open("letter_count.csv", "w") as csvfile:
            writer = csv.writer(csvfile)
            writer.writerow(["Letter", "Count_All", "Count_Uppercase", "Percentage"])
            for letter in sorted(letter_counts.keys()):
                count_all = letter_counts[letter]
                count_uppercase = letter_counts[letter.upper()]
                percentage = "{:.2f}".format(letter_percentages[letter])
                writer.writerow([letter, count_all, count_uppercase, percentage])

x = News("Smth happend disaster", "Tbilisi", datetime.datetime.now())
x.print_news()

a = PrivateAdd("Advertise", date(2023, 7, 24))
a.print_adv()

b = Joke("How does the ocean say hi? It waves!@@")
b.print_joke()

d = Joke("Haha")
d.print_joke()

e = PrivateAdd("KupiPlease", date(2024, 1, 1))
e.print_adv()

c = Breaking_news("output.txt")
c.print_breaknews()

f = CsvCollecterCount("news.txt")
f.count_words()

g = CsvLetter("news.txt")
g.letter_info()
